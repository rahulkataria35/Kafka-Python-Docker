version: '3.3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
     - "2181:2181"

  kafka:
    image: wurstmeister/kafka   # https://github.com/wurstmeister/kafka-docker
    container_name: kafka_server  
    ports:
     - "9092:9092"
    expose:
     - "9093"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_CREATE_TOPICS: "my-topic-rk:1:1, my-topic-2:1:1"   #topic_name:partition:replicas

  producer:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: Producer
    depends_on:
      - kafka
    restart: on-failure
    ports:
      - "9094:80"

  consumer:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.consumer
    container_name: Consumer
    depends_on:
      - kafka
    restart: on-failure
    ports:
      - "9095:80"
      
    
  # producer_consumer:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   image: producer_consumer:latest
    
  #   healthcheck:
  #     test:
  #       [
  #         "CMD",
  #         "curl",
  #         "-f",
  #         "http://127.0.0.1:5000/status"
  #       ]
  #     interval: "30s"
  #     timeout: "150s"
  #     retries: 3
  #   container_name: "producer_consumer"

  #   ports:
  #     - "9044:80"
  #   working_dir: /app
      